#!/usr/bin/env ruby
require 'bundler/setup'
require 'crystalize'
require 'optionparser'

# Used to parse command line arguments via +OptionParser+
class ARGVParser
  # Returns parsed command line +options+
  # @example
  #   options = ARGVParser.parse(ARGV)
  def self.yesno(o, args, key)
    o == 'yes' ? args[key] = true : args[key] = false
  end

  def self.parse(options)
    args = Hash.new

    opt_parser = OptionParser.new do |opts|
      opts.banner = "Usage: crystalize file_regex [options]"
      opts.separator ''
      opts.on('-f', '--files=', 'Regex for Dir')           { |o| args[:files]   = o }
      opts.on("--transform-literals")                      {|o| args[:transform_literals] = true }
      opts.on("--transform-private")                       {|o| args[:transform_private] = true }
      opts.on("--transform-all")                           {|o| args[:transform_all] = true }
      opts.separator ''
      opts.on_tail("-h", "--help", "Show this message")    { abort opts.to_s }
      opts.on_tail("--version", "Show version")    { abort Crystalize::VERSION }
    end

    opt_parser.parse!(options)
    args
  end
end

files = ARGV.first.start_with?('-') ? [] : ARGV.pop
options = ARGVParser.parse(ARGV)
Crystalize::ProjectConverter.new(files, options).convert
